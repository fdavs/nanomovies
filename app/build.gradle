apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "no.skavdahl.udacity.popularmovies"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        // MOVIE_DATA_TIMEOUT: how soon movie data in the database should be refreshed by going online
        debug {
            buildConfigField 'long', 'MOVIE_DATA_TIMEOUT', '1*60*1000' // 1 minute
        }
        release {
            buildConfigField 'long', 'MOVIE_DATA_TIMEOUT', '12*50*60*1000' // 12 hours
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'THEMOVIEDB_API_KEY', themoviedb_api_key
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.1'  // for more readable assertions
    testCompile 'org.json:json:20140107'          // implementation of JSON library to replace the mocked library in Android's test library.
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.squareup.picasso:picasso:2.5.2'  // for async downloading of movie posters
    compile 'com.squareup.okhttp3:okhttp:3.0.0-RC1' // for robust communication with themoviedb.org
    compile 'com.jakewharton:butterknife:7.0.1'
    //androidTestCompile 'junit:junit:4.12'
    // TODO androidTestCompile 'com.squareup.assertj:assertj-android:1.1.1' // for testing of activities
}
